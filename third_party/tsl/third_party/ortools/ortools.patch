diff '--color=auto' -u -r or-tools-9.5/ortools/linear_solver/BUILD.bazel or-tools-9.5-new/ortools/linear_solver/BUILD.bazel
--- or-tools-9.5/ortools/linear_solver/BUILD.bazel	2022-11-25 09:21:54.000000000 +0000
+++ or-tools-9.5-new/ortools/linear_solver/BUILD.bazel	2023-03-17 16:30:14.577442683 +0000
@@ -19,31 +19,6 @@
 
 exports_files(["model_exporter_swig_helper.h"])
 
-config_setting(
-    name = "with_glpk",
-    values = {"define": "USE_GLPK="},
-)
-
-config_setting(
-    name = "with_cplex",
-    values = {"define": "USE_CPLEX="},
-)
-
-config_setting(
-    name = "with_xpress",
-    values = {"define": "USE_XPRESS="},
-)
-
-config_setting(
-    name = "with_cbc",
-    values = {"define": "USE_CBC="},
-)
-
-config_setting(
-    name = "with_clp",
-    values = {"define": "USE_CLP="},
-)
-
 proto_library(
     name = "linear_solver_proto",
     srcs = ["linear_solver.proto"],
@@ -62,12 +37,6 @@
     deps = ["//ortools/util:optional_boolean_py_pb2"],
 )
 
-# You can include the interfaces to different solvers by invoking '--define'
-# flags. By default GLOP, BOP, SCIP, GUROBI, and CP-SAT interface are included.
-#
-# For instance, if you want to use the GLPK solver, build with
-# '--define USE_GLPK=' (or add it to your bazel.rc file). This will download,
-# build and link to GLPK.
 cc_library(
     name = "linear_solver",
     srcs = [
@@ -79,27 +48,10 @@
         "linear_expr.cc",
         "linear_solver_callback.cc",
         "linear_solver.cc",
-        "lpi_glop.cpp",
         "pdlp_interface.cc",
         "sat_interface.cc",
-        "scip_callback.cc",
-        "scip_interface.cc",
-    ] + select({
-        ":with_cbc": ["cbc_interface.cc"],
-        "//conditions:default": [],
-    }) + select({
-        ":with_clp": ["clp_interface.cc"],
-        "//conditions:default": [],
-    }) + select({
-        ":with_cplex": ["cplex_interface.cc"],
-        "//conditions:default": [],
-    }) + select({
-        ":with_xpress": ["xpress_interface.cc"],
-        "//conditions:default": [],
-    }) + select({
-        ":with_glpk": ["glpk_interface.cc"],
-        "//conditions:default": [],
-    }),
+        "glpk_interface.cc",
+    ],
     hdrs = [
         "glop_interface.cc",
         "glop_utils.h",
@@ -116,7 +68,6 @@
     ],
     deps = [
         ":linear_solver_cc_proto",
-        ":scip_with_glop",
         ":model_exporter",
         ":model_validator",
         "@com_google_absl//absl/status",
@@ -132,11 +83,8 @@
         "//ortools/base:stl_util",
         "//ortools/base:timer",
         "//ortools/base",
-        "//ortools/bop:bop_parameters_cc_proto",
-        "//ortools/bop:integral_solver",
         "//ortools/glop:lp_solver",
         "//ortools/glop:parameters_cc_proto",
-        "//ortools/gscip:legacy_scip_params",
         "//ortools/gurobi:environment",
         "//ortools/linear_solver/proto_solver:proto_solver",
         "//ortools/pdlp:primal_dual_hybrid_gradient",
@@ -149,10 +97,8 @@
         "//ortools/sat:lp_utils",
         "//ortools/util:fp_utils",
         "//ortools/util:lazy_mutable_copy",
-    ] + select({
-        ":with_glpk": ["@glpk//:glpk"],
-        "//conditions:default": [],
-    }),
+        "@glpk//:glpk",
+    ],
 )
 
 cc_library(
@@ -179,21 +125,6 @@
     ],
 )
 
-copy_file(
-    name = "lpi_glop",
-    src = "@scip//:src/lpi/lpi_glop.cpp",
-    out = "lpi_glop.cpp",
-)
-
-cc_library(
-    name = "scip_with_glop",
-    srcs = ["lpi_glop.cpp"],
-    deps = [
-        "//ortools/glop:lp_solver",
-        "@scip//:libscip",
-    ],
-)
-
 cc_library(
     name = "scip_helper_macros",
     hdrs = ["scip_helper_macros.h"],